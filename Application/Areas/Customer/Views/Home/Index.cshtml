@using BookedIn.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Product>
<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-5 mt-1 mb-5">
    @foreach (var product in Model)
    {
        <div class="col d-flex align-items-stretch">
            <div class="card border-0 shadow border-top border-5 rounded d-flex flex-column w-100">

                <img src="@product.ImageUrl" class="card-img-top rounded" style="height: 500px; object-fit: cover;" />

                <div class="card-body d-flex flex-column flex-grow-1">
                    <p class="card-title h6 text-dark opacity-75 text-uppercase text-center mb-1">@product.Title</p>
                    <p class="text-warning text-center mb-2">by <b>@product.Author</b></p>

                    <p class="text-dark opacity-75 text-center mb-1">
                        List Price: <span class="text-decoration-line-through">@product.ListPrice.ToString("c")</span>
                    </p>
                    <p class="text-dark text-center fw-bold">
                        As low as: <span>@product.Price100.ToString("c")</span>
                    </p>

                    <div class="mt-auto">
                        <a asp-action="Details" asp-route-id="@product.Id"
                           class="btn btn-primary bg-gradient border-0 form-control">
                            Details
                        </a>
                    </div>
                </div>

            </div>
        </div>
    }
</div>
<div class="d-flex justify-content-center mt-3">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        ActiveLiElementClass = "active"
    })
</div>
