@using BookedIn.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Product>

<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4 gy-5 mt-2 mb-5">
    @foreach (var product in Model)
    {
        <div class="col d-flex align-items-stretch">
            <div class="card shadow-sm border-0 rounded d-flex flex-column w-100 product-card">

                <img src="@product.ImageUrl"
                     class="card-img-top rounded-top"
                     alt="@product.Title"
                     style="height: 280px; object-fit: contain; padding: 0.75rem;" />

                <div class="card-body d-flex flex-column flex-grow-1">

                    <p class="card-title h6 text-dark opacity-75 text-uppercase text-center mb-1" style="min-height: 3em; overflow: hidden;">
                        @product.Title
                    </p>

                    <p class="text-warning text-center mb-2" style="min-height: 1.6em; overflow: hidden;">
                        by <strong>@product.Author</strong>
                    </p>

                    <p class="text-dark opacity-75 text-center mb-1">
                        List Price: <span class="text-decoration-line-through">@product.ListPrice.ToString("c")</span>
                    </p>

                    <p class="text-dark text-center fw-bold mb-2">
                        As low as: <span>@product.Price100.ToString("c")</span>
                    </p>

                    <div class="text-center mb-2">
                        <span class="badge bg-secondary">@product.Category?.Name</span>
                    </div>

                    <div class="mt-auto">
                        <a asp-action="Details" asp-route-id="@product.Id"
                           class="btn btn-outline-primary w-100">
                            View Details
                        </a>
                    </div>

                </div>
            </div>
        </div>
    }
</div>

<div class="d-flex justify-content-center mt-3">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        ActiveLiElementClass = "active"
    })
</div>

<style>
    .product-card {
        min-height: 100%;
        transition: all 0.2s ease-in-out;
    }

    .product-card:hover {
        transform: scale(1.01);
        box-shadow: 0 0 12px rgba(0, 0, 0, 0.15);
    }

    .card-body p {
        font-size: 0.9rem;
        margin-bottom: 5px;
    }
</style>
